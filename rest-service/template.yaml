AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  rest-service

  SAM Template for rest-service

Parameters:
  TableName:
    Type: String
    Default: "posts"
  Region:
    Type: String
    Default: "us-east-2"
  DYNAMODBURI:
    Type: String
    Default: "https://dynamodb.us-east-2.amazonaws.com"
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    CodeUri: handler/
    Runtime: nodejs20.x
    Architectures:
        - x86_64
    Environment:
      Variables:
        TABLE_NAME: !Ref TableName
        DYNAMODB_URI: !Ref DYNAMODBURI
        REGION_NAME: !Ref Region

Resources:

  PostRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Models:
        postModelPostPutRequest:
          type: object
          required:
            - arthur
            - title
            - message
          properties:
              arthur:
                type: string
              title:
                type: string
              message:
                type: string

  GetAllPosts:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.getAllPosts
      Policies:
        - DynamoDBReadPolicy:
            TableName: TABLE_NAME
      Events:
        GetAllPostsEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref PostRestApi
            Path: /posts
            Method: get
            

  GetPostByArthur:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.getPostByArthur
      Policies:
        - DynamoDBReadPolicy:
            TableName: TABLE_NAME
      Events:
        GetPostByArthurEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /posts/{arthur}
            Method: get
            RestApiId: !Ref PostRestApi

            RequestParameter:
              - method.request.path.arthur:
                Required: true

  CreatePost:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.createPost
      Policies:
        - DynamoDBCrudPolicy:
            TableName: TABLE_NAME
      Events:
        CreatePostEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref PostRestApi
            Path: /posts
            Method: post

            # Will not work when running sam local start-api
            RequestModel:
              Model: postModelPostPutRequest
              Required: true
              ValidateBody: true

  EditPost:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.editPost
      Policies:
        - DynamoDBCrudPolicy:
            TableName: TABLE_NAME
      Events:
        EditPostEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref PostRestApi
            Path: /posts/{id}
            Method: put

            # Will not work when running sam local start-api
            RequestModel:
              Model: postModelPostPutRequest
              Required: true
              ValidateBody: true

            RequestParameter:
              - method.request.path.id:
                Required: true

  DeletePost:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.deletePost
      Policies:
        - DynamoDBCrudPolicy:
            TableName: TABLE_NAME
      Events:
        DeletePostEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref PostRestApi
            Path: /posts/{id}
            Method: delete

            RequestParameter:
              - method.request.path.id:
                Required: true

  PostTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: TABLE_NAME
    AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
    KeySchema:
      - AttributeName: id
        KeyType: HASH
    ProvisionedThroughput:  
      ReadCapacityUnits: 5
      WriteCapacityUnits: 5

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  GetAllPosts:
    Description: "API Gateway endpoint URL for the GetAllPosts function"
    Value: !Sub "https://${PostRestApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/posts"
  # HelloWorldFunction:
  #   Description: "Hello World Lambda Function ARN"
  #   Value: !GetAtt HelloWorldFunction.Arn
  # HelloWorldFunctionIamRole:
  #   Description: "Implicit IAM Role created for Hello World function"
  #   Value: !GetAtt HelloWorldFunctionRole.Arn
